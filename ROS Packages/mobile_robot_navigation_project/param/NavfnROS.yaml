TrajectoryPlannerROS:
  # Robot Configuration Parameters
  acc_lim_x: 2.5
  acc_lim_theta:  3.2

  # min_vel x and max_vel x: The minimum and maximum velocities(in meters/second)
  # allowed when sending data to the mobile base
  # The minimum velocity should be great enough to overcome friction
  # The maximum velocity adjust is good to limit the robotâ€™s velocity in narrow environments
  max_vel_x: 2.0
  min_vel_x: -0.5

  # min_vel_theta and max_vel_theta: the minimum and maximum rotational
  max_vel_theta: 1.0
  min_vel_theta: -1.0

  # min_in_place_vel_theta: min in place rotational vel, but in radians per
  # second.
  min_in_place_vel_theta: 0.2

  # holomic_robot: this is a boolean responsible to choose between holonomic and
  # non-holonomic robots, so the base local planner can issue velocity commands
  # as expected.
  holonomic_robot: false

  # escape vel: this speed delimits the driving speed during escapes(in meters/second).
  # Its noteworthy that this value should be negative to make the robot reverse.
  escape_vel: -0.1

  # Goal Tolerance Parameters
  yaw_goal_tolerance: 0.1
  xy_goal_tolerance: 0.2
  latch_xy_goal_tolerance: false

  # Forward Simulation Parameters
  sim_time: 2.0
  sim_granularity: 0.02
  angular_sim_granularity: 0.02
  vx_samples: 6
  vtheta_samples: 20
  controller_frequency: 20.0

  # Trajectory scoring parameters
  meter_scoring: true # Whether the gdist_scale and pdist_scale parameters should assume that goal_distance and path_distance are expressed in units of meters or cells. Cells are assumed by default (false).
  # The weighting for how much the controller should attempt to avoid obstacles.
  occdist_scale:  0.1

  # The weighting for how much the controller should stay close to the path it was given
  pdist_scale: 0.75

  # The weighting for how much the controller should attempt to reach its local goal, also controls speed
  gdist_scale: 1.0

  heading_lookahead: 0.325  #How far to look ahead in meters when scoring different in-place-rotation trajectories
  heading_scoring: false  #Whether to score based on the robot's heading to the path or its distance from the path. default false
  heading_scoring_timestep: 0.8   #How far to look ahead in time in seconds along the simulated trajectory when using heading scoring (double, default: 0.8)
  dwa: true #Whether to use the Dynamic Window Approach (DWA)_ or whether to use Trajectory Rollout
  simple_attractor: false
  publish_cost_grid_pc: true  

  # Oscillation Prevention Parameters
  oscillation_reset_dist: 0.25 #How far the robot must travel in meters before oscillation flags are reset (double, default: 0.05)
  escape_reset_dist: 0.1
  escape_reset_theta: 0.1